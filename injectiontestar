local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local settings = {
    enabled = false,
    showTeam = false,
    maxDistance = 1000,
    speed = 16,
    noclip = false,
    baseESP = false,
    brainrotESP = false,
    teamColors = {
        ally = Color3.fromRGB(0, 255, 0),
        enemy = Color3.fromRGB(180, 0, 255)
    },
    baseColor = Color3.fromRGB(255, 255, 0),
    brainrotColor = Color3.fromRGB(255, 165, 0)
}

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PiterGAb"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 320, 0, 340)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
title.BorderSizePixel = 0
title.Text = "PiterHub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = mainFrame

local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Name = "MinimizeBtn"
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -30, 0, 0)
minimizeBtn.AnchorPoint = Vector2.new(1, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
minimizeBtn.BorderSizePixel = 0
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Font = Enum.Font.SourceSansBold
minimizeBtn.TextSize = 18
minimizeBtn.Parent = mainFrame

local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -20, 1, -40)
contentFrame.Position = UDim2.new(0, 10, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Botões principais
local function makeButton(name, text, pos, color, parent)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Size = UDim2.new(0, 140, 0, 30)
    btn.Position = pos
    btn.BackgroundColor3 = color
    btn.BorderSizePixel = 0
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 16
    btn.Parent = parent
    return btn
end

local espToggle = makeButton("ESPToggle","ESP: OFF",UDim2.new(0,10,0,10),Color3.fromRGB(150,0,0),contentFrame)
local teamToggle = makeButton("TeamToggle","Team Check: OFF",UDim2.new(0,170,0,10),Color3.fromRGB(150,0,0),contentFrame)
local noclipToggle = makeButton("NoclipToggle","Noclip: OFF",UDim2.new(0,10,0,50),Color3.fromRGB(150,0,0),contentFrame)
local baseESPToggle = makeButton("BaseESPToggle","Base ESP: OFF",UDim2.new(0,170,0,50),Color3.fromRGB(150,0,0),contentFrame)
local brainrotESPToggle = makeButton("BrainrotESPToggle","Brainrot ESP: OFF",UDim2.new(0,10,0,90),Color3.fromRGB(150,0,0),contentFrame)

-- Labels e caixas de input
local function makeLabel(name,text,pos,parent)
    local lbl = Instance.new("TextLabel")
    lbl.Name = name
    lbl.Size = UDim2.new(0,140,0,20)
    lbl.Position = pos
    lbl.BackgroundColor3 = Color3.fromRGB(50,50,70)
    lbl.BorderSizePixel = 0
    lbl.Text = text
    lbl.TextColor3 = Color3.fromRGB(255,255,255)
    lbl.Font = Enum.Font.SourceSans
    lbl.TextSize = 16
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = parent
    return lbl
end

local distanceLabel = makeLabel("DistanceLabel","Distância ESP:",UDim2.new(0,10,0,130),contentFrame)
local distanceBox = Instance.new("TextBox")
distanceBox.Name = "DistanceBox"
distanceBox.Size = UDim2.new(0, 80, 0, 25)
distanceBox.Position = UDim2.new(0, 150, 0, 130)
distanceBox.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
distanceBox.BorderSizePixel = 0
distanceBox.Text = tostring(settings.maxDistance)
distanceBox.TextColor3 = Color3.fromRGB(255, 255, 255)
distanceBox.Font = Enum.Font.SourceSans
distanceBox.TextSize = 16
distanceBox.Parent = contentFrame

local speedLabel = makeLabel("SpeedLabel","Velocidade:",UDim2.new(0,10,0,160),contentFrame)
local speedBox = Instance.new("TextBox")
speedBox.Name = "SpeedBox"
speedBox.Size = UDim2.new(0, 80, 0, 25)
speedBox.Position = UDim2.new(0, 150, 0, 160)
speedBox.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
speedBox.BorderSizePixel = 0
speedBox.Text = tostring(settings.speed)
speedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
speedBox.Font = Enum.Font.SourceSans
speedBox.TextSize = 16
speedBox.Parent = contentFrame

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(0, 280, 0, 40)
statusLabel.Position = UDim2.new(0, 10, 0, 190)
statusLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
statusLabel.BorderSizePixel = 0
statusLabel.Text = "Status: ESP desativado"
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextSize = 14
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.TextYAlignment = Enum.TextYAlignment.Top
statusLabel.Parent = contentFrame

-- Variáveis auxiliares
local minimized = false
local espHighlights = {}
local baseHighlights = {}
local brainrotHighlights = {}
local noclipConnection
local baseBillboards = {}
local lastBaseUpdate = 0

-- Funções auxiliares (isTeammate, distance, createESP, removeESP etc.)
-- [ ... aqui vem TODAS as funções como estavam no original ... ]
-- Incluindo a função updateBaseESP já corrigida que mostrei antes

-- Substitua sua função antiga por esta:
local function updateBaseESP()
    if not settings.baseESP then
        for base, highlight in pairs(baseHighlights) do
            highlight:Destroy()
            if baseBillboards[base] then
                baseBillboards[base]:Destroy()
            end
        end
        baseHighlights = {}
        baseBillboards = {}
        return
    end

    local currentTime = tick()
    if currentTime - lastBaseUpdate < 2 then return end
    lastBaseUpdate = currentTime

    local foundBases = {}

    for _, obj in pairs(Workspace:GetDescendants()) do
        if (obj.Name:lower():find("base") or obj:IsA("Model")) then
            if not baseHighlights[obj] then
                local highlight = Instance.new("Highlight")
                highlight.Name = "BaseHighlight"
                highlight.Adornee = obj
                highlight.FillTransparency = 0.9
                highlight.OutlineTransparency = 0
                highlight.FillColor = settings.baseColor
                highlight.OutlineColor = settings.baseColor
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Parent = obj
                baseHighlights[obj] = highlight
            end

            if not baseBillboards[obj] then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "BaseTimerESP"
                billboard.Size = UDim2.new(0, 200, 0, 50)
                billboard.StudsOffset = Vector3.new(0, 8, 0)
                billboard.AlwaysOnTop = true
                billboard.Adornee = obj
                billboard.Parent = obj

                local textLabel = Instance.new("TextLabel")
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.Text = "Carregando..."
                textLabel.TextColor3 = Color3.new(1, 1, 1)
                textLabel.TextScaled = true
                textLabel.Font = Enum.Font.SourceSansBold
                textLabel.Parent = billboard

                baseBillboards[obj] = billboard
            end

            local label = baseBillboards[obj]:FindFirstChild("TextLabel")
            if label then
                label.Text = (getBaseTime(obj) or 60) .. "s"
            end

            foundBases[obj] = true
        end
    end

    for base, highlight in pairs(baseHighlights) do
        if not foundBases[base] then
            highlight:Destroy()
            baseHighlights[base] = nil
            if baseBillboards[base] then
                baseBillboards[base]:Destroy()
                baseBillboards[base] = nil
            end
        end
    end
end

-- [ resto do código com updateBrainrotESP, updateESP, binds dos botões, etc. igual ao seu original ]
